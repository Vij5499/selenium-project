name: Java CI with Maven

# This section defines when the workflow will run.
on:
  # Run on every push to the 'main' or 'master' branch.
  push:
    branches: [ "main", "master" ]
  # Also run on every pull request that targets the 'main' or 'master' branch.
  pull_request:
    branches: [ "main", "master" ]

# This section defines the jobs to be run.
jobs:
  # We define a single job named 'build-and-test'.
  build-and-test:
    # Use the latest version of Ubuntu as the operating system for our runner.
    runs-on: ubuntu-latest

    # This section lists the individual steps in our job.
    steps:
      # Step 1: Check out the repository's code so the workflow can access it.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the correct Java version (JDK 17) for our project.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # Cache Maven dependencies to speed up future builds.
          cache: maven

      # Step 3: Run the Maven command to compile, test, and generate the report.
      - name: Build and run tests
        run: mvn clean install

      # Step 4: (Optional but highly recommended) Upload the test report as an artifact.
      # This allows you to download and view the ExtentReport from the GitHub Actions run.
      - name: Upload HTML test report
        # Only run this step if the previous steps succeeded or failed (to ensure report is always uploaded)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: target/extent-report.html
      # Step 5: Upload the raw XML test results for deeper analysis
      - name: Upload XML test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/